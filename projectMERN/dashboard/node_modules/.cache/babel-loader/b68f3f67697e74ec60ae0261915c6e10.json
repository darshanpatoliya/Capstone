{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { userListReducer, userLoginReducer } from \"./Reducers/userReducers\";\nimport { productCreateReducer, productDeleteReducer, productEditReducer, productListReducer, productUpdateReducer } from \"./Reducers/ProductReducers\";\nimport { orderDeliveredReducer, orderDetailsReducer, orderListReducer } from \"./Reducers/OrderReducres\";\nconst reducer = combineReducers({\n  userLogin: userLoginReducer,\n  userList: userListReducer,\n  productList: productListReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productEdit: productEditReducer,\n  productUpdate: productUpdateReducer,\n  orderList: orderListReducer,\n  orderDetails: orderDetailsReducer,\n  orderDeliver: orderDeliveredReducer\n}); // login\n\nconst userInfoFromLocalStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null;\nconst initialState = {\n  userLogin: {\n    userInfo: userInfoFromLocalStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["E:/Varshil/Sem-6/Capstone/Full-SorceCode-ShoeShop-Ecommerce-Web-main/Full-SorceCode-ShoeShop-Ecommerce-Web-main/dashboard/src/Redux/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","userListReducer","userLoginReducer","productCreateReducer","productDeleteReducer","productEditReducer","productListReducer","productUpdateReducer","orderDeliveredReducer","orderDetailsReducer","orderListReducer","reducer","userLogin","userList","productList","productDelete","productCreate","productEdit","productUpdate","orderList","orderDetails","orderDeliver","userInfoFromLocalStorage","localStorage","getItem","JSON","parse","initialState","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,eAAT,EAA0BC,gBAA1B,QAAkD,yBAAlD;AACA,SACEC,oBADF,EAEEC,oBAFF,EAGEC,kBAHF,EAIEC,kBAJF,EAKEC,oBALF,QAMO,4BANP;AAOA,SACEC,qBADF,EAEEC,mBAFF,EAGEC,gBAHF,QAIO,0BAJP;AAMA,MAAMC,OAAO,GAAGd,eAAe,CAAC;AAC9Be,EAAAA,SAAS,EAAEV,gBADmB;AAE9BW,EAAAA,QAAQ,EAAEZ,eAFoB;AAG9Ba,EAAAA,WAAW,EAAER,kBAHiB;AAI9BS,EAAAA,aAAa,EAAEX,oBAJe;AAK9BY,EAAAA,aAAa,EAAEb,oBALe;AAM9Bc,EAAAA,WAAW,EAAEZ,kBANiB;AAO9Ba,EAAAA,aAAa,EAAEX,oBAPe;AAQ9BY,EAAAA,SAAS,EAAET,gBARmB;AAS9BU,EAAAA,YAAY,EAAEX,mBATgB;AAU9BY,EAAAA,YAAY,EAAEb;AAVgB,CAAD,CAA/B,C,CAaA;;AACA,MAAMc,wBAAwB,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,IAC7BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAD6B,GAE7B,IAFJ;AAIA,MAAMG,YAAY,GAAG;AACnBf,EAAAA,SAAS,EAAE;AAAEgB,IAAAA,QAAQ,EAAEN;AAAZ;AADQ,CAArB;AAIA,MAAMO,UAAU,GAAG,CAAC9B,KAAD,CAAnB;AAEA,MAAM+B,KAAK,GAAGlC,WAAW,CACvBe,OADuB,EAEvBgB,YAFuB,EAGvB3B,mBAAmB,CAACF,eAAe,CAAC,GAAG+B,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { userListReducer, userLoginReducer } from \"./Reducers/userReducers\";\r\nimport {\r\n  productCreateReducer,\r\n  productDeleteReducer,\r\n  productEditReducer,\r\n  productListReducer,\r\n  productUpdateReducer,\r\n} from \"./Reducers/ProductReducers\";\r\nimport {\r\n  orderDeliveredReducer,\r\n  orderDetailsReducer,\r\n  orderListReducer,\r\n} from \"./Reducers/OrderReducres\";\r\n\r\nconst reducer = combineReducers({\r\n  userLogin: userLoginReducer,\r\n  userList: userListReducer,\r\n  productList: productListReducer,\r\n  productDelete: productDeleteReducer,\r\n  productCreate: productCreateReducer,\r\n  productEdit: productEditReducer,\r\n  productUpdate: productUpdateReducer,\r\n  orderList: orderListReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  orderDeliver: orderDeliveredReducer,\r\n});\r\n\r\n// login\r\nconst userInfoFromLocalStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\nconst initialState = {\r\n  userLogin: { userInfo: userInfoFromLocalStorage },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}