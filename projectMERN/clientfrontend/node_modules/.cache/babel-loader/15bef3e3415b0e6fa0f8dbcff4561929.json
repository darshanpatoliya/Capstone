{"ast":null,"code":"// import React, { useEffect, useState } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import Header from \"./../components/Header\";\n// import { PayPalButton } from \"react-paypal-button-v2\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { getOrderDetails, payOrder } from \"../Redux/Actions/OrderActions\";\n// import Loading from \"./../components/LoadingError/Loading\";\n// import Message from \"./../components/LoadingError/Error\";\n// import moment from \"moment\";\n// import axios from \"axios\";\n// import { ORDER_PAY_RESET } from \"../Redux/Constants/OrderConstants\";\n// import { URL } from \"../Redux/Url\";\n\n// const OrderScreen = ({ match }) => {\n//   window.scrollTo(0, 0);\n//   const [sdkReady, setSdkReady] = useState(false);\n//   const orderId = match.params.id;\n//   const dispatch = useDispatch();\n\n//   const orderDetails = useSelector((state) => state.orderDetails);\n//   const { order, loading, error } = orderDetails;\n//   const orderPay = useSelector((state) => state.orderPay);\n//   const { loading: loadingPay, success: successPay } = orderPay;\n\n//   if (!loading) {\n//     const addDecimals = (num) => {\n//       return (Math.round(num * 100) / 100).toFixed(2);\n//     };\n\n//     order.itemsPrice = addDecimals(\n//       order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n//     );\n//   }\n\n//   useEffect(() => {\n//     const addPayPalScript = async () => {\n//       const { data: clientId } = await axios.get(`${URL}/api/config/paypal`);\n//       const script = document.createElement(\"script\");\n//       script.type = \"text/javascript\";\n//       script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\n//       script.async = true;\n//       script.onload = () => {\n//         setSdkReady(true);\n//       };\n//       document.body.appendChild(script);\n//     };\n//     if (!order || successPay) {\n//       dispatch({ type: ORDER_PAY_RESET });\n//       dispatch(getOrderDetails(orderId));\n//     } else if (!order.isPaid) {\n//       if (!window.paypal) {\n//         addPayPalScript();\n//       } else {\n//         setSdkReady(true);\n//       }\n//     }\n//   }, [dispatch, orderId, successPay, order]);\n\n//   const successPaymentHandler = (paymentResult) => {\n//     dispatch(payOrder(orderId, paymentResult));\n//   };\n\n//   return (\n//     <>\n//       <Header />\n//       <div className=\"container\">\n//         {(\n//           <>\n//             <div className=\"row  order-detail\">\n//               <div className=\"col-lg-4 col-sm-4 mb-lg-4 mb-5 mb-sm-0\">\n//                 <div className=\"row\">\n//                   <div className=\"col-md-4 center\">\n//                     <div className=\"alert-success order-box\">\n//                       <i className=\"fas fa-user\"></i>\n//                     </div>\n//                   </div>\n//                   <div className=\"col-md-8 center\">\n//                     <h5>\n//                       <strong>Customer</strong>\n//                     </h5>\n//                     <p>{order.user.name}</p>\n//                     <p>\n//                       <a href={`mailto:${order.user.email}`}>\n//                         {order.user.email}\n//                       </a>\n//                     </p>\n//                   </div>\n//                 </div>\n//               </div>\n//               {/* 2 */}\n//               <div className=\"col-lg-4 col-sm-4 mb-lg-4 mb-5 mb-sm-0\">\n//                 <div className=\"row\">\n//                   <div className=\"col-md-4 center\">\n//                     <div className=\"alert-success order-box\">\n//                       <i className=\"fas fa-truck-moving\"></i>\n//                     </div>\n//                   </div>\n//                   <div className=\"col-md-8 center\">\n//                     <h5>\n//                       <strong>Order info</strong>\n//                     </h5>\n//                     <p>Shipping: {order.shippingAddress.country}</p>\n//                     <p>Pay method: {order.paymentMethod}</p>\n//                     {order.isPaid ? (\n//                       <div className=\"bg-info p-2 col-12\">\n//                         <p className=\"text-white text-center text-sm-start\">\n//                           Paid on {moment(order.paidAt).calendar()}\n//                         </p>\n//                       </div>\n//                     ) : (\n//                       <div className=\"bg-success p-2 col-12\">\n//                         <p className=\"text-white text-center text-sm-start\">\n//                           Paid\n//                         </p>\n//                       </div>\n//                     )}\n//                   </div>\n//                 </div>\n//               </div>\n//               {/* 3 */}\n//               <div className=\"col-lg-4 col-sm-4 mb-lg-4 mb-5 mb-sm-0\">\n//                 <div className=\"row\">\n//                   <div className=\"col-md-4 center\">\n//                     <div className=\"alert-success order-box\">\n//                       <i className=\"fas fa-map-marker-alt\"></i>\n//                     </div>\n//                   </div>\n//                   <div className=\"col-md-8 center\">\n//                     <h5>\n//                       <strong>Deliver to</strong>\n//                     </h5>\n//                     <p>\n//                       Address: {order.shippingAddress.city},{\" \"}\n//                       {order.shippingAddress.address},{\" \"}\n//                       {order.shippingAddress.postalCode}\n//                     </p>\n//                     {order.isDelivered ? (\n//                       <div className=\"bg-info p-2 col-12\">\n//                         <p className=\"text-white text-center text-sm-start\">\n//                           Delivered on {moment(order.deliveredAt).calendar()}\n//                         </p>\n//                       </div>\n//                     ) : (\n//                       <div className=\"bg-danger p-2 col-12\">\n//                         <p className=\"text-white text-center text-sm-start\">\n//                           Not Delivered\n//                         </p>\n//                       </div>\n//                     )}\n//                   </div>\n//                 </div>\n//               </div>\n//             </div>\n\n//             <div className=\"row order-products justify-content-between\">\n//               <div className=\"col-lg-8\">\n//                 {order.orderItems.length === 0 ? (\n//                   <Message variant=\"alert-info mt-5\">\n//                     Your order is empty\n//                   </Message>\n//                 ) : (\n//                   <>\n//                     {order.orderItems.map((item, index) => (\n//                       <div className=\"order-product row\" key={index}>\n//                         <div className=\"col-md-3 col-6\">\n//                           <img src={item.image} alt={item.name} />\n//                         </div>\n//                         <div className=\"col-md-5 col-6 d-flex align-items-center\">\n//                           <Link to={`/products/${item.product}`}>\n//                             <h6>{item.name}</h6>\n//                           </Link>\n//                         </div>\n//                         <div className=\"mt-3 mt-md-0 col-md-2 col-6  d-flex align-items-center flex-column justify-content-center \">\n//                           <h4>QUANTITY</h4>\n//                           <h6>{item.qty}</h6>\n//                         </div>\n//                         <div className=\"mt-3 mt-md-0 col-md-2 col-6 align-items-end  d-flex flex-column justify-content-center \">\n//                           <h4>SUBTOTAL</h4>\n//                           <h6>${item.qty * item.price}</h6>\n//                         </div>\n//                       </div>\n//                     ))}\n//                   </>\n//                 )}\n//               </div>\n//               {/* total */}\n//               <div className=\"col-lg-3 d-flex align-items-end flex-column mt-5 subtotal-order\">\n//                 <table className=\"table table-bordered\">\n//                   <tbody>\n//                     <tr>\n//                       <td>\n//                         <strong>Products</strong>\n//                       </td>\n//                       <td>${order.itemsPrice}</td>\n//                     </tr>\n//                     <tr>\n//                       <td>\n//                         <strong>Shipping</strong>\n//                       </td>\n//                       <td>${order.shippingPrice}</td>\n//                     </tr>\n//                     <tr>\n//                       <td>\n//                         <strong>Tax</strong>\n//                       </td>\n//                       <td>${order.taxPrice}</td>\n//                     </tr>\n//                     <tr>\n//                       <td>\n//                         <strong>Total</strong>\n//                       </td>\n//                       <td>${order.totalPrice}</td>\n//                     </tr>\n//                   </tbody>\n//                 </table>\n//                 {!order.isPaid && (\n//                   <div className=\"col-12\">\n//                     {loadingPay && <Loading />}\n//                     {!sdkReady ? (\n//                       <Loading />\n//                     ) : (\n//                       <PayPalButton\n//                         amount={order.totalPrice}\n//                         onSuccess={successPaymentHandler}\n//                       />\n//                     )}\n//                   </div>\n//                 )}\n//               </div>\n//             </div>\n//           </>\n//         )}\n//       </div>\n//     </>\n//   );\n// };\n\n// export default OrderScreen;","map":{"version":3,"names":[],"sources":["D:/College/Conestoga/Sem6/Capstone/Capstone/projectMERN/clientfrontend/src/screens/OrderScreen.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\n// import Header from \"./../components/Header\";\r\n// import { PayPalButton } from \"react-paypal-button-v2\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import { getOrderDetails, payOrder } from \"../Redux/Actions/OrderActions\";\r\n// import Loading from \"./../components/LoadingError/Loading\";\r\n// import Message from \"./../components/LoadingError/Error\";\r\n// import moment from \"moment\";\r\n// import axios from \"axios\";\r\n// import { ORDER_PAY_RESET } from \"../Redux/Constants/OrderConstants\";\r\n// import { URL } from \"../Redux/Url\";\r\n\r\n// const OrderScreen = ({ match }) => {\r\n//   window.scrollTo(0, 0);\r\n//   const [sdkReady, setSdkReady] = useState(false);\r\n//   const orderId = match.params.id;\r\n//   const dispatch = useDispatch();\r\n\r\n//   const orderDetails = useSelector((state) => state.orderDetails);\r\n//   const { order, loading, error } = orderDetails;\r\n//   const orderPay = useSelector((state) => state.orderPay);\r\n//   const { loading: loadingPay, success: successPay } = orderPay;\r\n\r\n//   if (!loading) {\r\n//     const addDecimals = (num) => {\r\n//       return (Math.round(num * 100) / 100).toFixed(2);\r\n//     };\r\n\r\n//     order.itemsPrice = addDecimals(\r\n//       order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n//     );\r\n//   }\r\n\r\n//   useEffect(() => {\r\n//     const addPayPalScript = async () => {\r\n//       const { data: clientId } = await axios.get(`${URL}/api/config/paypal`);\r\n//       const script = document.createElement(\"script\");\r\n//       script.type = \"text/javascript\";\r\n//       script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n//       script.async = true;\r\n//       script.onload = () => {\r\n//         setSdkReady(true);\r\n//       };\r\n//       document.body.appendChild(script);\r\n//     };\r\n//     if (!order || successPay) {\r\n//       dispatch({ type: ORDER_PAY_RESET });\r\n//       dispatch(getOrderDetails(orderId));\r\n//     } else if (!order.isPaid) {\r\n//       if (!window.paypal) {\r\n//         addPayPalScript();\r\n//       } else {\r\n//         setSdkReady(true);\r\n//       }\r\n//     }\r\n//   }, [dispatch, orderId, successPay, order]);\r\n\r\n//   const successPaymentHandler = (paymentResult) => {\r\n//     dispatch(payOrder(orderId, paymentResult));\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <Header />\r\n//       <div className=\"container\">\r\n//         {(\r\n//           <>\r\n//             <div className=\"row  order-detail\">\r\n//               <div className=\"col-lg-4 col-sm-4 mb-lg-4 mb-5 mb-sm-0\">\r\n//                 <div className=\"row\">\r\n//                   <div className=\"col-md-4 center\">\r\n//                     <div className=\"alert-success order-box\">\r\n//                       <i className=\"fas fa-user\"></i>\r\n//                     </div>\r\n//                   </div>\r\n//                   <div className=\"col-md-8 center\">\r\n//                     <h5>\r\n//                       <strong>Customer</strong>\r\n//                     </h5>\r\n//                     <p>{order.user.name}</p>\r\n//                     <p>\r\n//                       <a href={`mailto:${order.user.email}`}>\r\n//                         {order.user.email}\r\n//                       </a>\r\n//                     </p>\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n//               {/* 2 */}\r\n//               <div className=\"col-lg-4 col-sm-4 mb-lg-4 mb-5 mb-sm-0\">\r\n//                 <div className=\"row\">\r\n//                   <div className=\"col-md-4 center\">\r\n//                     <div className=\"alert-success order-box\">\r\n//                       <i className=\"fas fa-truck-moving\"></i>\r\n//                     </div>\r\n//                   </div>\r\n//                   <div className=\"col-md-8 center\">\r\n//                     <h5>\r\n//                       <strong>Order info</strong>\r\n//                     </h5>\r\n//                     <p>Shipping: {order.shippingAddress.country}</p>\r\n//                     <p>Pay method: {order.paymentMethod}</p>\r\n//                     {order.isPaid ? (\r\n//                       <div className=\"bg-info p-2 col-12\">\r\n//                         <p className=\"text-white text-center text-sm-start\">\r\n//                           Paid on {moment(order.paidAt).calendar()}\r\n//                         </p>\r\n//                       </div>\r\n//                     ) : (\r\n//                       <div className=\"bg-success p-2 col-12\">\r\n//                         <p className=\"text-white text-center text-sm-start\">\r\n//                           Paid\r\n//                         </p>\r\n//                       </div>\r\n//                     )}\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n//               {/* 3 */}\r\n//               <div className=\"col-lg-4 col-sm-4 mb-lg-4 mb-5 mb-sm-0\">\r\n//                 <div className=\"row\">\r\n//                   <div className=\"col-md-4 center\">\r\n//                     <div className=\"alert-success order-box\">\r\n//                       <i className=\"fas fa-map-marker-alt\"></i>\r\n//                     </div>\r\n//                   </div>\r\n//                   <div className=\"col-md-8 center\">\r\n//                     <h5>\r\n//                       <strong>Deliver to</strong>\r\n//                     </h5>\r\n//                     <p>\r\n//                       Address: {order.shippingAddress.city},{\" \"}\r\n//                       {order.shippingAddress.address},{\" \"}\r\n//                       {order.shippingAddress.postalCode}\r\n//                     </p>\r\n//                     {order.isDelivered ? (\r\n//                       <div className=\"bg-info p-2 col-12\">\r\n//                         <p className=\"text-white text-center text-sm-start\">\r\n//                           Delivered on {moment(order.deliveredAt).calendar()}\r\n//                         </p>\r\n//                       </div>\r\n//                     ) : (\r\n//                       <div className=\"bg-danger p-2 col-12\">\r\n//                         <p className=\"text-white text-center text-sm-start\">\r\n//                           Not Delivered\r\n//                         </p>\r\n//                       </div>\r\n//                     )}\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n\r\n//             <div className=\"row order-products justify-content-between\">\r\n//               <div className=\"col-lg-8\">\r\n//                 {order.orderItems.length === 0 ? (\r\n//                   <Message variant=\"alert-info mt-5\">\r\n//                     Your order is empty\r\n//                   </Message>\r\n//                 ) : (\r\n//                   <>\r\n//                     {order.orderItems.map((item, index) => (\r\n//                       <div className=\"order-product row\" key={index}>\r\n//                         <div className=\"col-md-3 col-6\">\r\n//                           <img src={item.image} alt={item.name} />\r\n//                         </div>\r\n//                         <div className=\"col-md-5 col-6 d-flex align-items-center\">\r\n//                           <Link to={`/products/${item.product}`}>\r\n//                             <h6>{item.name}</h6>\r\n//                           </Link>\r\n//                         </div>\r\n//                         <div className=\"mt-3 mt-md-0 col-md-2 col-6  d-flex align-items-center flex-column justify-content-center \">\r\n//                           <h4>QUANTITY</h4>\r\n//                           <h6>{item.qty}</h6>\r\n//                         </div>\r\n//                         <div className=\"mt-3 mt-md-0 col-md-2 col-6 align-items-end  d-flex flex-column justify-content-center \">\r\n//                           <h4>SUBTOTAL</h4>\r\n//                           <h6>${item.qty * item.price}</h6>\r\n//                         </div>\r\n//                       </div>\r\n//                     ))}\r\n//                   </>\r\n//                 )}\r\n//               </div>\r\n//               {/* total */}\r\n//               <div className=\"col-lg-3 d-flex align-items-end flex-column mt-5 subtotal-order\">\r\n//                 <table className=\"table table-bordered\">\r\n//                   <tbody>\r\n//                     <tr>\r\n//                       <td>\r\n//                         <strong>Products</strong>\r\n//                       </td>\r\n//                       <td>${order.itemsPrice}</td>\r\n//                     </tr>\r\n//                     <tr>\r\n//                       <td>\r\n//                         <strong>Shipping</strong>\r\n//                       </td>\r\n//                       <td>${order.shippingPrice}</td>\r\n//                     </tr>\r\n//                     <tr>\r\n//                       <td>\r\n//                         <strong>Tax</strong>\r\n//                       </td>\r\n//                       <td>${order.taxPrice}</td>\r\n//                     </tr>\r\n//                     <tr>\r\n//                       <td>\r\n//                         <strong>Total</strong>\r\n//                       </td>\r\n//                       <td>${order.totalPrice}</td>\r\n//                     </tr>\r\n//                   </tbody>\r\n//                 </table>\r\n//                 {!order.isPaid && (\r\n//                   <div className=\"col-12\">\r\n//                     {loadingPay && <Loading />}\r\n//                     {!sdkReady ? (\r\n//                       <Loading />\r\n//                     ) : (\r\n//                       <PayPalButton\r\n//                         amount={order.totalPrice}\r\n//                         onSuccess={successPaymentHandler}\r\n//                       />\r\n//                     )}\r\n//                   </div>\r\n//                 )}\r\n//               </div>\r\n//             </div>\r\n//           </>\r\n//         )}\r\n//       </div>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default OrderScreen;\r\n"],"mappings},"metadata":{},"sourceType":"module"}